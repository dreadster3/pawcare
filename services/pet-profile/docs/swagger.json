{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/healthcheck": {
            "get": {
                "description": "Checks if the internal services used by the service are healthy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "healthcheck"
                ],
                "summary": "Endpoint to check if the service is healthy",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/healthcheck.JSONHealthcheckReport"
                        }
                    }
                }
            }
        },
        "/api/v1/profiles": {
            "get": {
                "description": "Get all pet profiles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pet"
                ],
                "summary": "Get all pet profiles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PetProfile"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new pet profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pet"
                ],
                "summary": "Create a new pet profile",
                "parameters": [
                    {
                        "description": "Pet Profile",
                        "name": "pet_profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PetProfile"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.PetProfile"
                        }
                    },
                    "400": {
                        "description": "Reason for failure",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Reason for failure",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/profiles/{id}": {
            "get": {
                "description": "Get pet profile by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pet"
                ],
                "summary": "Get pet profile by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pet Profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PetProfile"
                        }
                    },
                    "400": {
                        "description": "Reason for failure",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Reason for failure",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "healthcheck.HealthcheckStatus": {
            "type": "string",
            "enum": [
                "healthy",
                "unhealthy",
                "degraded"
            ],
            "x-enum-varnames": [
                "HealthcheckStatusHealthy",
                "HealthcheckStatusUnhealthy",
                "HealthcheckStatusDegraded"
            ]
        },
        "healthcheck.JSONHealthcheckReport": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/healthcheck.HealthcheckStatus"
                    }
                },
                "status": {
                    "$ref": "#/definitions/healthcheck.HealthcheckStatus"
                }
            }
        },
        "models.EGender": {
            "type": "string",
            "enum": [
                "Male",
                "Female"
            ],
            "x-enum-varnames": [
                "EGenderMale",
                "EGenderFemale"
            ]
        },
        "models.PetProfile": {
            "type": "object",
            "properties": {
                "breed": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "integer"
                },
                "gender": {
                    "$ref": "#/definitions/models.EGender"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "picture": {
                    "$ref": "#/definitions/primitive.Binary"
                },
                "species": {
                    "type": "string"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "primitive.Binary": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "subtype": {
                    "type": "integer"
                }
            }
        }
    }
}